# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode
pool:
  # vmImage: 'macOS-10.14'
  vmImage: 'macOS-latest'

variables:
  projectName: 'Yelp Demo'
  scheme: 'Yelp Demo'
  sdk: 'iphoneos'
  configuration: 'Release'

steps:

- task: CocoaPods@0
  inputs:
    forceRepoUpdate: true
  displayName: 'pod install using the CocoaPods task with a forced repo update and a custom project directory'

# - script: /usr/local/bin/pod install
#   displayName: 'pod install using a script'

# The `certSecureFile` and `provProfileSecureFile` files are uploaded to the Azure Pipelines secure files library where they are encrypted.
# The `P12Password` variable is set in the Azure Pipelines pipeline editor and marked 'secret' to be encrypted.
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'RBC-Dominion-Securities-Inc-Distribution-Signing-Cert.p12'
    certPwd: $(P12Password)

- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'Yelp_Demo_Poc.mobileprovision'
    
- task: Xcode@5
  inputs:
    actions: 'build'
    sdk: '$(sdk)'
    scheme: '$(scheme)'
    configuration: '$(configuration)'
    xcodeVersion: 'default' # Options: default, 10, 9, 8, specifyPath
    # exportPath: '$(agent.buildDirectory)/output/$(sdk)/$(configuration)'
    # packageApp: false
    # xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
    xcWorkspacePath: '**/$(projectName).xcworkspace'
    useXcpretty: false
    signingOption: 'default'



# - task: Xcode@5
#   inputs:
#     actions: 'build'
#     scheme: ''
#     sdk: 'iphoneos'
#     configuration: 'Release'
#     xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace'
#     xcodeVersion: 'default' # Options: 8, 9, 10, default, specifyPath
#     signingOption: 'default' # Options: nosign, default, manual, auto
#     useXcpretty: 'false' # Makes it easier to diagnose build failures

- task: CopyFiles@2
  inputs:
    contents: '**/*.ipa'
    targetFolder: '$(build.artifactStagingDirectory)'

- task: PublishBuildArtifacts@1

# App Center distribute
# Distribute app builds to testers and users via Visual Studio App Center
- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'App Center'
    appSlug: 'ken_mau/Yelp-Demo-Poc'
    appFile: '**/*.ipa'
    #symbolsOption: 'Apple' # Optional. Options: apple, android
    #symbolsPath: # Optional
    #symbolsPdbFiles: '**/*.pdb' # Optional
    #symbolsDsymFiles: # Optional
    #symbolsMappingTxtFile: # Optional
    #symbolsIncludeParentDirectory: # Optional
    #releaseNotesOption: 'input' # Options: input, file
    #releaseNotesInput: # Required when releaseNotesOption == Input
    #releaseNotesFile: # Required when releaseNotesOption == File
    #isMandatory: false # Optional
    #destinationType: 'groups' # Options: groups, store
    #distributionGroupId: # Optional
    #destinationStoreId: # Required when destinationType == Store
    #isSilent: # Optional